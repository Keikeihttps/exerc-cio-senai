Eu comecei criando um banco de dados completo para a loja de cosplay, incluindo todas as tabelas que eu precisava: vendedores, clientes, produtos, categorias, formas de pagamento, vendas e aluguéis. Eu também fiz algumas visualizações para ajudar nas consultas, mostrando informações detalhadas sobre vendas, produtos por categoria, aluguéis, a relação entre clientes e vendedores, e produtos que estão com estoque baixo. Em seguida, completei todas as tabelas com dados de exemplo, colocando 10 registros em cada uma para ter informações boas para usar. Com o banco de dados pronto, comecei a realizar as tarefas solicitadas. Eu primeiro fiz uma pesquisa usando LIKE para encontrar clientes que têm "Sakura" no nome e examinei o desempenho com o EXPLAIN. Antes de fazer um índice, a consulta buscava por toda a tabela, o que não é eficiente. Criei um índice na coluna com os nomes dos clientes. Quando executei o EXPLAIN novamente, percebi que a consulta ficou muito mais rápida, pois agora usa o índice para encontrar os registros com agilidade. Depois, eu tentei mudar os tipos das colunas. Quando eu tentei mudar a coluna "nome" da tabela de clientes de texto para número, ocorreu um erro porque não dá para transformar palavras em números. Quando eu tentei mudar a coluna "preco" da tabela produtos de decimal para varchar, deu certo sem dificuldades, porque os números podem ser transformados em texto. Eu criei um usuário com meu nome e dei todas as permissões para que ele possa fazer qualquer ação no banco de dados. Em seguida, criei uma conta para meu colega, mas apenas permiti que ele fizesse consultas na tabela de clientes. Quando eu tentei acessar outras tabelas com a conta do meu colega, consegui acessar apenas a tabela de clientes. Nas outras, apareceu um erro de permissão, como eu já esperava. Em seguida, fiz 12 consultas usando diferentes tipos de JOIN. Cada uma dessas consultas é diferente e tem 3 versões: INNER JOIN, LEFT JOIN e RIGHT JOIN. A primeira consulta revelou a conexão entre clientes e vendedores. A segunda mostrou a relação entre produtos e categorias. A terceira destacou a interação entre vendas, clientes e vendedores. A quarta apresentou a ligação entre aluguéis, clientes e métodos de pagamento. Cada tipo de JOIN apresentou resultados distintos, principalmente quando havia valores nulos. Por fim, eu atualizei alguns registros para que o campo id_vendedor_cadastro ficasse como NULL para alguns clientes e fiz as consultas com JOIN de novo. O INNER JOIN não exibiu os clientes que não tinham vendedor. O LEFT JOIN mostrou todos os clientes, mesmo os que não tinham vendedor. Já o RIGHT JOIN apresentou todos os vendedores, incluindo aqueles que não tinham clientes. Isso mostrou claramente a diferença prática entre os tipos de JOIN quando lidamos com dados que estão incompletos ou são nulos.